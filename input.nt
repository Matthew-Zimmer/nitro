
#go_import 
import raw_uuid "github.com/google/uuid"
#end

#go
func uuid() string {
  return raw_uuid.New().String() 
}
#end

declare func uuid(): str intrinsic

declare func html(children: html, _: str): html intrinsic
declare func head(children: html, _: str): html intrinsic
declare func title(children: html, _: str): html intrinsic
declare func body(children: html, _: str): html intrinsic
declare func h1(children: html, _: str): html intrinsic
declare func div(children: html, _: str): html intrinsic
declare func style(children: html, _: str): html intrinsic
declare func script(children: html, _: str): html intrinsic
declare func a(children: html, _: str): html intrinsic
declare func input(children: html, _: str): html intrinsic
declare func form(children: html, _: str): html intrinsic
declare func fieldset(children: html, _: str): html intrinsic
declare func button(children: html, _: str): html intrinsic
declare func label(children: html, _: str): html intrinsic

struct item {
  id: str,
  name: str,
}

table item = item

func page(title: str, children: html): html
  <html>
    <head>
      <script src="https://unpkg.com/htmx.org@1.9.11"></script>
      <script src="https://cdn.tailwindcss.com"></script>
      <title>
        ${title}
      </title>
    </head>
    <body hx-boost="true">
      ${children}
    </body>
  </html>

get / ()
  <page title="hello">
    <h1>
      Nitro Rules
    </h1>
  </page>

get /${msg} ()
  <page title=${msg}>
    <h1>
      Nitro Rules
    </h1>
  </page>

get /items ()
  <page title="items">  
    <a href="/create-item">Create New Item</a>
    ${for x in select id, name from item {
      <h1 class="flex flex-row gap-2">
        <div>${x.id}</div>
         - 
         <div>${x.name}</div>
      </h1>
    }}
  </page>

get /create-item ()
  <page title="Create Item">
    <form hx-post="/api/item" class="flex flex-col gap-2 border p-10 border-black">
      <h1>Create new Item</h1>
      <fieldset class="flex flex-col gap-1 invalid:after:content-[attr(err)] after:text-red-500" err="Please enter a name">
        <label for="name">Name</label>
        <input id="name" class="border p-2 invalid:border-red-500" name="name" required="true" />
      </fieldset>
      <button>
        Create
      </button>
    </form>
  </page>

declare struct create_item_input {
  name: str
}

#go
type create_item_input = struct  {
  Name string `form:"name" validate:"required"`
}
#end

post /api/item (payload: create_item_input) {
  insert into item
    (id, name)
  values 
    (${uuid()}, ${payload.name})
}
